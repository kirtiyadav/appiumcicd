<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-HAB3M0C" ignored="0" name="OnePlus Nord2" tests="3" failures="0" timestamp="2022-08-18T21:38:58 IST" time="13.421" errors="0">
  <testcase name="@BeforeMethod beforeMethod" time="5.264" classname="com.qa.BaseTest">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: The expected screen record file &amp;apos;/sdcard/cd0b8f7c.mp4&amp;apos; does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-HAB3M0C&amp;apos;, ip: &amp;apos;192.168.1.11&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_301&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\Kirti Yadav\IdeaPr..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, chromeDriverPort: 11009, databaseEnabled: false, desired: {app: C:\Users\Kirti Yadav\IdeaPr..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, chromeDriverPort: 11009, deviceName: OnePlus Nord2 5G, ignoreHiddenApiPolicyError: false, noReset: true, platformName: android, systemPort: 10008, udid: PB6PRKYX7DLB5TVG}, deviceApiLevel: 30, deviceManufacturer: OnePlus, deviceModel: DN2101, deviceName: PB6PRKYX7DLB5TVG, deviceScreenDensity: 480, deviceScreenSize: 1080x2400, deviceUDID: PB6PRKYX7DLB5TVG, ignoreHiddenApiPolicyError: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 113, systemPort: 10008, takesScreenshot: true, udid: PB6PRKYX7DLB5TVG, viewportRect: {height: 2048, left: 0, top: 113, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 733c7b84-3319-47fd-a7aa-afe842c84998">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/cd0b8f7c.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-HAB3M0C', ip: '192.168.1.11', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\Kirti Yadav\IdeaPr..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, chromeDriverPort: 11009, databaseEnabled: false, desired: {app: C:\Users\Kirti Yadav\IdeaPr..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, chromeDriverPort: 11009, deviceName: OnePlus Nord2 5G, ignoreHiddenApiPolicyError: false, noReset: true, platformName: android, systemPort: 10008, udid: PB6PRKYX7DLB5TVG}, deviceApiLevel: 30, deviceManufacturer: OnePlus, deviceModel: DN2101, deviceName: PB6PRKYX7DLB5TVG, deviceScreenDensity: 480, deviceScreenSize: 1080x2400, deviceUDID: PB6PRKYX7DLB5TVG, ignoreHiddenApiPolicyError: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 3, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 113, systemPort: 10008, takesScreenshot: true, udid: PB6PRKYX7DLB5TVG, viewportRect: {height: 2048, left: 0, top: 113, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 733c7b84-3319-47fd-a7aa-afe842c84998
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:45)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:47)
at com.qa.BaseTest.beforeMethod(BaseTest.java:94)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.qa.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.qa.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.qa.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.qa.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.qa.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="com.qa.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="invalidPassword" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- invalidPassword -->
  <testcase name="invalidUsername" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- invalidUsername -->
  <testcase name="successfulLogin" time="0.0" classname="com.qa.tests.LoginTests">
    <skipped/>
  </testcase> <!-- successfulLogin -->
</testsuite> <!-- OnePlus Nord2 -->
